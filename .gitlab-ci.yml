services:
  - docker:20.10.12-dind

workflow:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

stages:
  - test
  - build
  - scan
  - release

test-backend:
  stage: test
  image: golang:1.18.1-alpine3.15
  services:
    - name: mheers/nats-auto-server:2.3.2-alpine3.14
      alias: mq
  variables:
    CGO_CFLAGS: -g -O2 -Wno-return-local-addr
    # GOMODCACHE: ${CI_PROJECT_DIR}/.gomod/
    FF_NETWORK_PER_BUILD: 1
    OPERATOR_SEED: SOAA7B6L7CCSKP7XFDD6MXH65SRZIHBL2HXZFHWOLSVTN3UQ4EBMHKAJ2A
    ACCOUNT_SEED: SAAGQMOVIAG5TTHENP3JMN3HOA4YY3LXJSU6SAWUDTPSIECKKSC54QYOJQ
    KNOPERATOR_MQ_URI: "ws://mq:9222"
    KNOPERATOR_MQ_JWT: "eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiI2UVRTQVM1QVdXSkFHVlZNTkM1NlFWQU5aNFhWTkNKSlFNSlRZQ1RHUk1SUVg2SERGNDZBIiwiaWF0IjoxNjUxMjEwNzEzLCJpc3MiOiJBQjVVVU1XRTdMQkVQVjNSSjVUQVRIT1Y1RjJXT0xRREtZQ0VTVFBNQ1VISVAyM0VQQVpNMlBDRSIsIm5hbWUiOiJ0ZXN0Iiwic3ViIjoiVUJWUjQ3U1U1SU5DTlJJQzdKVzM0VTQ0SFlYU0JIUFI0V1RHWjIyUFpCNUNHM1RSTVlGREpTSzYiLCJuYXRzIjp7InB1YiI6eyJhbGxvdyI6WyJ3ZWF0aGVyLioiLCJfSU5CT1guXHUwMDNlIl19LCJzdWIiOnsiYWxsb3ciOlsid2VhdGhlci4qIiwiX0lOQk9YLlx1MDAzZSJdfSwic3VicyI6LTEsImRhdGEiOi0xLCJwYXlsb2FkIjotMSwiYmVhcmVyX3Rva2VuIjp0cnVlLCJ0eXBlIjoidXNlciIsInZlcnNpb24iOjJ9fQ.TgcQjMHBNGiVEbeBvWSoTbiwVyQ954Y7m8FnqGLAFp5fh4oIz3KAq7ipNupvAShlc88Yyc8CIku6sdbjlBmNBg"
    KNOPERATOR_MQ_USEED: "SUAF4CXFW23UXVXVVNL2G4LPRDPUSTBMWRXIZJNG63XGTBUVPUXNDKSIOU"
    LOGLEVEL: debug
  # cache:
  #   key: ${CI_COMMIT_REF_SLUG}
  #   paths:
  #     - .gomod/
  before_script:
    - mkdir -p .gomod/
    - apk add --no-cache gcc libc-dev git openssh-client pkgconfig ffmpeg-dev ffmpeg
    - git config --global url.https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}.insteadOf https://${CI_SERVER_HOST}
    - export GOPRIVATE=${CI_SERVER_HOST}
  script:
    # - echo $GOMODCACHE
    - go install github.com/jstemmer/go-junit-report@latest
    - go mod download
    - go test ./... -race -coverprofile cover.out -v 2>&1 | go-junit-report -set-exit-code > report.xml
    - go tool cover -func cover.out
    # run staticcheck
    - go install honnef.co/go/tools/cmd/staticcheck@latest
    - staticcheck ./...
  artifacts:
    when: always
    reports:
      junit: report.xml
  tags:
    - tividoo
  rules:
    - if: "$CI_PIPELINE_SOURCE !~ /^schedule/"

build:
  stage: build
  image: jdrouet/docker-with-buildx
  before_script:
    - apk add --no-cache bash curl
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN ${CI_REGISTRY}
    - export GOPRIVATE=${CI_SERVER_HOST}
  script:
    - docker buildx create --use
    - ./ci/set-version.sh --branch ${CI_COMMIT_REF_NAME}
    - ./ci/docker-build.sh --registry ${CI_REGISTRY_IMAGE} --commit-sha ${CI_COMMIT_SHA} --platform linux/arm64,linux/amd64
  artifacts:
    paths:
      - .VERSION
    expire_in: 1 hour
  tags:
    - tividoo

scan:
  stage: scan
  needs:
    - build
  image: docker:20.10.12-dind
  before_script:
    - apk add --no-cache bash curl
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN ${CI_REGISTRY}
  script:
    - time ./ci/docker-scan.sh --registry ${CI_REGISTRY_IMAGE} --commit-sha ${CI_COMMIT_SHA}
  tags:
    - tividoo
  allow_failure: false

release-prepare:
  stage: release
  image: docker:20.10.12-dind
  dependencies:
    - build
  needs:
    - job: build
      artifacts: true
  before_script:
    # install markdown-extract
    - docker pull sean0x42/markdown-extract:v2
    - containerId=$(docker create sean0x42/markdown-extract:v2)
    - docker cp "$containerId":/markdown-extract /bin/markdown-extract
    - docker rm -f "$containerId"

    # source the version
    - source .VERSION
  script:
    - CHANGELOGB64=$(markdown-extract "2022" CHANGELOG.md | base64)
    # - echo "CHANGELOGB64=$CHANGELOGB64" >> variables.env
    - echo "VERSION=$VERSION" >> variables.env
  artifacts:
    reports:
      dotenv: variables.env
  tags:
    - tividoo
  when: on_success
  rules:
    - if: "$CI_PIPELINE_SOURCE !~ /^schedule/"

release-docker:
  stage: release
  image: docker:20.10.12-dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN ${CI_REGISTRY}
    - apk add curl
    - curl -L https://github.com/regclient/regclient/releases/latest/download/regctl-linux-amd64 >regctl
    - chmod +x ./regctl
  dependencies:
    - release-prepare
    - scan
  needs:
    - job: release-prepare
      artifacts: true
    - job: scan
  script:
    - ./regctl image copy ${CI_REGISTRY}/${CI_PROJECT_PATH}/build-cache:${CI_COMMIT_SHA} ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_COMMIT_REF_NAME}:${VERSION}
    - ./regctl image copy ${CI_REGISTRY}/${CI_PROJECT_PATH}/build-cache:${CI_COMMIT_SHA} ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_COMMIT_REF_NAME}:latest
  tags:
    - tividoo
  when: on_success
  rules:
    - if: "$CI_PIPELINE_SOURCE !~ /^schedule/"

release-insecure:
  stage: release
  image: docker:20.10.12-dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN ${CI_REGISTRY}
    - apk add curl
    - curl -L https://github.com/regclient/regclient/releases/latest/download/regctl-linux-amd64 >regctl
    - chmod +x ./regctl
  dependencies:
    - build
  script:
    - source .VERSION
    - ./regctl image copy ${CI_REGISTRY}/${CI_PROJECT_PATH}/build-cache:${CI_COMMIT_SHA} ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_COMMIT_REF_NAME}:${VERSION}-insecure
  tags:
    - tividoo
  when: on_failure
  rules:
    - if: "$CI_PIPELINE_SOURCE !~ /^schedule/"

release-gitlab:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  dependencies:
    - release-prepare
    - release-docker
  needs:
    - job: release-prepare
      artifacts: true
    - job: release-docker
  before_script:
    - CHANGELOG=$(echo $CHANGELOGB64 | base64 -d)
    - DEMO="DEMO"
  script:
    - echo "running release-job for $VERSION"
  release:
    name: "Release ${CI_COMMIT_REF_NAME}:${VERSION}"
    tag_name: "${CI_COMMIT_REF_NAME}_${VERSION}"
    description: "
      # Release ${VERSION} for branch ${CI_COMMIT_REF_NAME} :champagne: :rocket:

      ## Usage / Installation

      Use

      \\`\\`\\`
      docker pull ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_COMMIT_REF_NAME}:${VERSION}
      \\`\\`\\`

      to pull this release.


      ## Changelog:

      - [ ] TODO: add changelog here
      "
  tags:
    - tividoo
  rules:
    - if: "$CI_PIPELINE_SOURCE !~ /^schedule/"
